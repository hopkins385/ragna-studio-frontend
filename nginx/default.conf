server {
    listen 80;
    server_name _;
    root /usr/share/nginx/html;
    index index.html;

    # security
    include security/security.conf;

    location = /index.html {
        expires off;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
    }

    # Force browsers to revalidate all app files
    # location ~* \.(?:html|js|css|json)$ {
    #     add_header Cache-Control "no-cache, no-store, must-revalidate";
    #     add_header Pragma "no-cache";
    #     add_header Expires "0";
    #     etag on;
    # }
    #
    # Cache static assets but validate against ETag
    location ~* \.(png|jpg|jpeg|gif|ico|svg|woff2?|ttf|eot)$ {
        expires 1d;
        access_log off;
        add_header Cache-Control "public, max-age=86400";
    }
    #
    # all assets contain hash in filename, cache forever
    # location ^~ /assets/ {
    #     etag on;
    #     add_header Cache-Control "public, max-age=31536000, s-maxage=31536000, immutable";
    #     try_files $uri =404;
    # }

    # all workbox scripts are compiled with hash in filename, cache forever
    location ^~ /workbox- {
        add_header Cache-Control "public, max-age=31536000, s-maxage=31536000, immutable";
        try_files $uri =404;
    }

    # Health check
    location /health {
        access_log off;
        return 200 'OK';
        add_header Content-Type text/plain;
    }

    # Gzip-Komprimierung
    # gzip on;
    # gzip_vary on;
    # gzip_proxied any;
    # gzip_comp_level 6;
    # gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Handle Single Page Application routing
    location / {
        expires off;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        try_files $uri $uri/ /index.html;
        # add_header Cache-Control "public, max-age=0, s-maxage=0, must-revalidate" always;
    }
}