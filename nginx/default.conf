server {
    listen 80;
    server_name _;
    root /usr/share/nginx/html;
    index index.html;

    # security
    include security/security.conf;

    # Gzip compression
    # gzip on;
    # gzip_vary on;
    # gzip_proxied any;
    # gzip_comp_level 6;
    # gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Real IP when behind Traefik
    # Sven: is this (the IPs) correct?
    set_real_ip_from 172.16.0.0/12;
    set_real_ip_from 192.168.0.0/16;
    set_real_ip_from 10.0.0.0/8;
    real_ip_header X-Forwarded-For;
    real_ip_recursive on;

    # Health check - useful for Traefik health checks
    location /health {
        access_log off;
        return 200 'OK';
        add_header Content-Type text/plain;
    }

    # Special handling for index.html
    location = /index.html {
        expires off;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
    }

    # For hashed JS and CSS files (usually in /assets/ directory)
    location ^~ /assets/ {
        expires 1y;
        add_header Cache-Control "public, max-age=31536000, s-maxage=31536000, immutable" always;
        access_log off;
        try_files $uri =404;
    }

    # For service worker files
    location ^~ /workbox- {
        add_header Cache-Control "public, max-age=31536000, s-maxage=31536000, immutable" always;
        try_files $uri =404;
    }

    # For un-hashed files that need revalidation
    location ~* \.(?:html|json)$ {
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;
        add_header Last-Modified $date_gmt;
        etag off;
    }

    # For .js and .css files that might not be in /assets/
    location ~* \.(?:js|css)$ {
        # Vite normally adds content hash to filenames
        if ($uri ~ "\.[\w]{8}\.") {
            expires 1y;
            add_header Cache-Control "public, max-age=31536000, s-maxage=31536000, immutable" always;
            access_log off;
        }
        # For non-hashed files, force revalidation
        if ($uri !~ "\.[\w]{8}\.") {
            add_header Cache-Control "no-cache" always;
            add_header Last-Modified $date_gmt;
            etag off;
        }
    }

    # Cache static assets with hash in filename or query param
    location ~* \.(png|jpg|jpeg|gif|ico|svg|woff2?|ttf|eot)$ {
        # Fixed the "or" syntax which isn't valid in Nginx
        if ($args ~* "[0-9a-f]{8,}") {
            expires 1y;
            add_header Cache-Control "public, max-age=31536000, s-maxage=31536000, immutable" always;
            access_log off;
            break;
        }

        if ($uri ~ "\.[\w]{8}\.") {
            expires 1y;
            add_header Cache-Control "public, max-age=31536000, s-maxage=31536000, immutable" always;
            access_log off;
            break;
        }

        # Otherwise use moderate caching
        expires 1d;
        add_header Cache-Control "public, max-age=86400" always;
        access_log off;
    }

    # Version endpoint that can be used to check container version
    location = /version.txt {
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;
        try_files $uri =404;
    }

    # Handle Single Page Application routing - should come last
    location / {
        expires off;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        try_files $uri $uri/ /index.html;
    }
}